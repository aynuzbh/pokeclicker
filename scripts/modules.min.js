/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/modules/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/modules/DataStore/BadgeCase.ts":
/*!********************************************!*\
  !*** ./src/modules/DataStore/BadgeCase.ts ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BadgeCase; });\n/* harmony import */ var _GameConstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GameConstants */ \"./src/modules/GameConstants.ts\");\n/* harmony import */ var _enums_Badges__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../enums/Badges */ \"./src/modules/enums/Badges.ts\");\n\r\n\r\nconst emptyBadgeList = new Array(_GameConstants__WEBPACK_IMPORTED_MODULE_0__[\"RegionGyms\"].flat().length).fill(false);\r\nclass BadgeCase {\r\n    constructor() {\r\n        this.name = 'Badge Case';\r\n        this.saveKey = 'badgeCase';\r\n        this.defaults = {};\r\n        this.badgeList = emptyBadgeList.map((v) => ko.observable(v));\r\n    }\r\n    badgeCount() {\r\n        return this.badgeList.reduce((acc, b) => (acc + Number(b())), 0);\r\n    }\r\n    gainBadge(badge) {\r\n        this.badgeList[badge](true);\r\n    }\r\n    hasBadge(badge) {\r\n        if (badge === null || badge === _enums_Badges__WEBPACK_IMPORTED_MODULE_1__[\"default\"].None) {\r\n            return true;\r\n        }\r\n        return !!this.badgeList[badge]();\r\n    }\r\n    // This method intentionally left blank\r\n    // eslint-disable-next-line class-methods-use-this\r\n    initialize() { }\r\n    // eslint-disable-next-line class-methods-use-this\r\n    canAccess() { return true; }\r\n    fromJSON(json) {\r\n        if (json == null) {\r\n            return;\r\n        }\r\n        json.forEach((hasBadge, index) => {\r\n            this.badgeList[index](hasBadge);\r\n        });\r\n    }\r\n    toJSON() {\r\n        let shouldReturn = false;\r\n        // We only want to save upto the highest badge we have obtained,\r\n        // everything else is assumed to be false\r\n        return this.badgeList\r\n            .map(ko.unwrap)\r\n            .reverse()\r\n            .filter((hasBadge) => {\r\n            shouldReturn = shouldReturn || hasBadge;\r\n            return shouldReturn;\r\n        })\r\n            .reverse();\r\n    }\r\n    // This method intentionally left blank\r\n    // eslint-disable-next-line class-methods-use-this\r\n    update() { }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/modules/DataStore/BadgeCase.ts?");

/***/ }),

/***/ "./src/modules/DataStore/StatisticStore/getRouteKillsProxy.ts":
/*!********************************************************************!*\
  !*** ./src/modules/DataStore/StatisticStore/getRouteKillsProxy.ts ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GameConstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../GameConstants */ \"./src/modules/GameConstants.ts\");\n\r\nconst failedSetValue = () => 0;\r\n// TODO: Determine what the return type is\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (() => {\r\n    // Filter the Region constant to only the string values (names)\r\n    const regionNames = Object.values(_GameConstants__WEBPACK_IMPORTED_MODULE_0__[\"Region\"])\r\n        .filter((v) => Number.isNaN(Number(v)));\r\n    const zeroedRegions = Object.fromEntries(regionNames.map((region) => ([\r\n        region,\r\n        new Proxy({}, {\r\n            get: (regionStats, prop) => {\r\n                if (regionStats[prop]) {\r\n                    return regionStats[prop];\r\n                }\r\n                // Route kills are tracked by the route number as the key,\r\n                // so only allow keys that can be numbers\r\n                if (Number.isNaN(Number(prop))) {\r\n                    if (Number.isNaN(prop)) {\r\n                        // eslint-disable-next-line no-console\r\n                        console.trace(`[Statistics] [routeKills.${region}] Invalid property requested:`, prop);\r\n                    }\r\n                    return failedSetValue;\r\n                }\r\n                // eslint-disable-next-line no-param-reassign\r\n                regionStats[prop] = ko.observable(0).extend({ numeric: 0 });\r\n                return regionStats[prop];\r\n            },\r\n            // This makes it so the stats observable can't be accidently changed\r\n            set: (obj, prop, value) => {\r\n                const result = obj[prop](value);\r\n                return result === failedSetValue;\r\n            },\r\n        }),\r\n    ])));\r\n    return new Proxy(zeroedRegions, {\r\n        get: (regions, prop) => {\r\n            // Convert the prop to the string version of the region\r\n            const regionName = Number.isNaN(Number(prop))\r\n                ? prop // A string was passed in\r\n                : _GameConstants__WEBPACK_IMPORTED_MODULE_0__[\"Region\"][prop]; // Number was passed in\r\n            if (!regionName) {\r\n                // eslint-disable-next-line no-console\r\n                console.trace('[Statistics] [routeKills] Attempted to get invalid region:', prop);\r\n            }\r\n            return regions[regionName];\r\n        },\r\n        // Prevent adding regions dynamically once the proxy is created\r\n        set: (obj, prop, value) => {\r\n            // eslint-disable-next-line no-console\r\n            console.trace(`[Statistics] [routeKills] Attempted to dynamically set region ${prop}:`, value);\r\n            return false;\r\n        },\r\n    });\r\n});\r\n\n\n//# sourceURL=webpack:///./src/modules/DataStore/StatisticStore/getRouteKillsProxy.ts?");

/***/ }),

/***/ "./src/modules/DataStore/StatisticStore/index.ts":
/*!*******************************************************!*\
  !*** ./src/modules/DataStore/StatisticStore/index.ts ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Statistics; });\n/* harmony import */ var _getRouteKillsProxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getRouteKillsProxy */ \"./src/modules/DataStore/StatisticStore/getRouteKillsProxy.ts\");\n/* harmony import */ var _koExtenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../koExtenders */ \"./src/modules/koExtenders.ts\");\n/* harmony import */ var _koExtenders__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_koExtenders__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\nconst failedSetValue = () => 0;\r\nclass Statistics {\r\n    constructor() {\r\n        this.saveKey = 'statistics';\r\n        this.defaults = {};\r\n        this.selectedPokemonID = ko.observable(1);\r\n        this.selectedBerryID = ko.observable(0).extend({ numeric: 0 });\r\n        this.observables = [\r\n            'secondsPlayed',\r\n            'clickAttacks',\r\n            'questsCompleted',\r\n            'totalShardsGained',\r\n            'totalMoney',\r\n            'totalDungeonTokens',\r\n            'totalQuestPoints',\r\n            'totalDiamonds',\r\n            'totalFarmPoints',\r\n            'totalBattlePoints',\r\n            'totalPokemonCaptured',\r\n            'totalPokemonDefeated',\r\n            'totalPokemonEncountered',\r\n            'totalPokemonHatched',\r\n            'totalShinyPokemonCaptured',\r\n            'totalShinyPokemonDefeated',\r\n            'totalShinyPokemonEncountered',\r\n            'totalShinyPokemonHatched',\r\n            'undergroundItemsFound',\r\n            'undergroundLayersMined',\r\n            'undergroundDailyDealTrades',\r\n            'totalManualHarvests',\r\n            'totalBerriesHarvested',\r\n            'totalBerriesReplanted',\r\n            'totalBerriesMutated',\r\n            'totalMulchesUsed',\r\n            'totalShovelsUsed',\r\n            'berryDailyDealTrades',\r\n            'battleFrontierTotalStagesCompleted',\r\n            'battleFrontierHighestStageCompleted',\r\n        ];\r\n        this.arrayObservables = [\r\n            'gymsDefeated',\r\n            'dungeonsCleared',\r\n            'pokeballsUsed',\r\n            'pokeballsBought',\r\n            'shardsGained',\r\n            'oakItemUses',\r\n            'berriesHarvested',\r\n            'mulchesUsed',\r\n        ];\r\n        // These will allow negative values (special events etc)\r\n        this.objectObservables = [\r\n            'pokemonCaptured',\r\n            'pokemonDefeated',\r\n            'pokemonEncountered',\r\n            'pokemonHatched',\r\n            'shinyPokemonCaptured',\r\n            'shinyPokemonDefeated',\r\n            'shinyPokemonEncountered',\r\n            'shinyPokemonHatched',\r\n        ];\r\n        // Observables that can be automatically generated\r\n        this.autogeneratedObservables = [\r\n            'routeKills',\r\n        ];\r\n        this.observables.forEach((prop) => {\r\n            this[prop] = ko.observable(0).extend({ numeric: 0 });\r\n        });\r\n        this.arrayObservables.forEach((array) => {\r\n            // We use a proxy to generate new array observables on the fly.\r\n            this[array] = new Proxy([], {\r\n                get: (statistics, prop) => {\r\n                    if (typeof statistics[prop] !== 'undefined') {\r\n                        return statistics[prop];\r\n                    }\r\n                    // If it's not an int or less than zero, we do not want to set it\r\n                    const id = Math.floor(Number(prop));\r\n                    if (Number.isNaN(id) || id < 0 || id !== Number(prop)) {\r\n                        if (Number.isNaN(id)) {\r\n                            // eslint-disable-next-line no-console\r\n                            console.trace(`[Statistics] [${array}] Invalid property requested:`, prop);\r\n                        }\r\n                        return failedSetValue;\r\n                    }\r\n                    // eslint-disable-next-line no-param-reassign\r\n                    statistics[id] = ko.observable(0).extend({ numeric: 0 });\r\n                    return statistics[id];\r\n                },\r\n                // This makes it so the stats observable can't be accidently changed\r\n                set: (obj, prop, value) => {\r\n                    const result = obj[prop](value);\r\n                    return result === failedSetValue;\r\n                },\r\n                // This is needed for map, forEach etc to work,\r\n                // because they want to check if target.hasOwnProperty(\"0\") first.\r\n                // The ko function doesn't seem to have any OwnProperties anyway,\r\n                // so no harm here (don't quote me)\r\n                // eslint-disable-next-line func-names\r\n                has: (target, prop) => Reflect.has(target, prop),\r\n            });\r\n        });\r\n        this.objectObservables.forEach((object) => {\r\n            this[object] = new Proxy({}, {\r\n                get: (statistics, prop) => {\r\n                    if (typeof statistics[prop] !== 'undefined') {\r\n                        return statistics[prop];\r\n                    }\r\n                    if (prop === 'highestID') {\r\n                        let highestID = 0;\r\n                        Object.entries(statistics).forEach(([key, val]) => {\r\n                            const numKey = Number(key);\r\n                            if (!Number.isNaN(numKey) && numKey > highestID && val() > 0) {\r\n                                highestID = numKey;\r\n                            }\r\n                        });\r\n                        return highestID;\r\n                    }\r\n                    // If it's not an int or less than zero, we do not want to set it\r\n                    const id = Number(prop);\r\n                    if (Number.isNaN(id)) {\r\n                        // eslint-disable-next-line no-console\r\n                        console.trace(`[Statistics] [${object}] Invalid property requested:`, prop);\r\n                        return () => 0;\r\n                    }\r\n                    return (val) => {\r\n                        if (!Number.isNaN(Number(val))) {\r\n                            // eslint-disable-next-line no-param-reassign\r\n                            statistics[prop] = ko.observable(val).extend({ numeric: 0 });\r\n                            return val;\r\n                        }\r\n                        return 0;\r\n                    };\r\n                },\r\n                // This makes it so the stats observable can't be accidently changed\r\n                set: (obj, prop, value) => {\r\n                    const result = obj[prop](value);\r\n                    return result === failedSetValue;\r\n                },\r\n                // This is needed for map, forEach etc to work,\r\n                // because they want to check if target.hasOwnProperty(\"0\") first.\r\n                // The ko function doesn't seem to have any OwnProperties anyway,\r\n                // so no harm here (don't quote me)\r\n                // eslint-disable-next-line func-names\r\n                has: (target, prop) => Reflect.has(target, prop),\r\n            });\r\n        });\r\n        // We use a proxy to generate new array observables on the fly.\r\n        this.routeKills = Object(_getRouteKillsProxy__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\r\n    }\r\n    toJSON() {\r\n        const saveObject = {};\r\n        const getSaveDataValue = (rawInput) => {\r\n            // Unwrap the value immediately, so we are always working with JS types\r\n            const input = ko.unwrap(rawInput);\r\n            if (Array.isArray(input)) {\r\n                // Recurse arrays through getSaveDataValue, to get any observable values\r\n                return input.map(getSaveDataValue);\r\n            }\r\n            if (typeof input === 'object' && !ko.isObservable(input)) {\r\n                // Recurse objects through getSaveDataValue, to get any observable values\r\n                return Object.entries(input).reduce((acc, [nextKey, nextValue]) => {\r\n                    acc[nextKey] = getSaveDataValue(nextValue);\r\n                    return acc;\r\n                }, {});\r\n            }\r\n            // If we get here, it isn't an array or object, so it must be a value.\r\n            return input;\r\n        };\r\n        // Since we're able to flatten arrays/objects/values with a single function,\r\n        // process all of them together\r\n        [].concat(this.observables, this.arrayObservables, this.objectObservables, this.autogeneratedObservables).forEach((prop) => { saveObject[prop] = getSaveDataValue(this[prop]); });\r\n        return saveObject;\r\n    }\r\n    fromJSON(json) {\r\n        if (!json) {\r\n            return;\r\n        }\r\n        this.observables.forEach((prop) => { this[prop](json[prop] || 0); });\r\n        this.arrayObservables.forEach((array) => {\r\n            var _a;\r\n            (_a = json[array]) === null || _a === void 0 ? void 0 : _a.forEach((el, index) => {\r\n                if (this[array] && this[array][index] && !Number.isNaN(Number(el))) {\r\n                    this[array][index](Number(el));\r\n                }\r\n            });\r\n        });\r\n        this.objectObservables.forEach((object) => {\r\n            if (!json[object]) {\r\n                return;\r\n            }\r\n            Object.entries(json[object]).forEach(([key, val]) => {\r\n                const num = Number(val);\r\n                if (!Number.isNaN(num) && num) {\r\n                    this[object][key](num);\r\n                }\r\n            });\r\n        });\r\n        const setAutogeneratedObservable = (objSet, objGet, key) => {\r\n            // Don't try to process a null value. We should retain the defaults\r\n            if (objGet[key] === null) {\r\n                return;\r\n            }\r\n            if (typeof objSet[key] === 'undefined') {\r\n                // Skip any values that are not allowed to be set\r\n                // eslint-disable-next-line no-console\r\n                console.trace('[Statistics] Could not set:', key);\r\n            }\r\n            else if (Array.isArray(objGet[key])) {\r\n                // If we've found an array, loop into it\r\n                for (let i = 0; i < objGet[key].length; i += 1) {\r\n                    setAutogeneratedObservable(objSet[key], objGet[key], i);\r\n                }\r\n            }\r\n            else if (typeof objGet[key] === 'object') {\r\n                // If we've found an object, nest into it\r\n                Object.keys(objGet[key]).forEach((nestedKey) => {\r\n                    setAutogeneratedObservable(objSet[key], objGet[key], nestedKey);\r\n                });\r\n            }\r\n            else if (ko.isObservable(objSet[key])) {\r\n                // If we've found an observable, set it\r\n                objSet[key](objGet[key]);\r\n            }\r\n            else {\r\n                // eslint-disable-next-line no-console\r\n                console.trace('[Statistics] Could not determine action to take for set:', key);\r\n            }\r\n        };\r\n        this.autogeneratedObservables.forEach((object) => {\r\n            if (!json[object]) {\r\n                return;\r\n            }\r\n            setAutogeneratedObservable(this, json, object);\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/modules/DataStore/StatisticStore/index.ts?");

/***/ }),

/***/ "./src/modules/DataStore/index.ts":
/*!****************************************!*\
  !*** ./src/modules/DataStore/index.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _BadgeCase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BadgeCase */ \"./src/modules/DataStore/BadgeCase.ts\");\n/* harmony import */ var _StatisticStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StatisticStore */ \"./src/modules/DataStore/StatisticStore/index.ts\");\n\r\n\r\nconst DataStore = {\r\n    badge: _BadgeCase__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n    statistics: _StatisticStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\r\n};\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (DataStore);\r\n\n\n//# sourceURL=webpack:///./src/modules/DataStore/index.ts?");

/***/ }),

/***/ "./src/modules/GameConstants.ts":
/*!**************************************!*\
  !*** ./src/modules/GameConstants.ts ***!
  \**************************************/
/*! exports provided: TICK_TIME, BATTLE_TICK, BATTLE_FRONTIER_TICK, UNDERGROUND_TICK, DUNGEON_TIME, DUNGEON_TICK, EFFECT_ENGINE_TICK, SAVE_TICK, GYM_TIME, GYM_COUNTDOWN, GYM_TICK, ACHIEVEMENT_TICK, MIN_LOAD_TIME, MAX_LOAD_TIME, MUTATION_TICK, WANDER_TICK, MAX_AVAILABLE_REGION, TotalPokemonsPerRegion, ITEM_USE_TIME, SECOND, MINUTE, HOUR, DAY, WEEK, ROAMING_MIN_CHANCE, ROAMING_MAX_CHANCE, SHINY_CHANCE_BATTLE, SHINY_CHANCE_DUNGEON, SHINY_CHANCE_SHOP, SHINY_CHANCE_STONE, SHINY_CHANCE_SAFARI, SHINY_CHANCE_BREEDING, SHINY_CHANCE_FARM, ITEM_PRICE_MULTIPLIER, ITEM_PRICE_DEDUCT, PLATE_VALUE, BREEDING_ATTACK_BONUS, BerryDistribution, MULCH_USE_TIME, BOOST_MULCH_MULTIPLIER, RICH_MULCH_MULTIPLIER, SURPRISE_MULCH_MULTIPLIER, AMAZE_MULCH_GROWTH_MULTIPLIER, AMAZE_MULCH_PRODUCE_MULTIPLIER, AMAZE_MULCH_MUTATE_MULTIPLIER, WANDER_RATE, BerryColor, DUNGEON_SIZE, DUNGEON_CHEST_SHOW, DUNGEON_MAP_SHOW, AchievementOption, DungeonTile, ROUTE_HELD_ITEM_CHANCE, DUNGEON_HELD_ITEM_CHANCE, DUNGEON_SHARDS, DUNGEON_BOSS_SHARDS, GYM_SHARDS, SAFARI_BATTLE_CHANCE, SAFARI_BASE_POKEBALL_COUNT, LEGAL_WALK_BLOCKS, SAFARI_OUT_OF_BALLS, GAIN_MONEY_BASE_REWARD, HATCH_EGGS_BASE_REWARD, SHINY_BASE_REWARD, DEFEAT_POKEMONS_BASE_REWARD, CAPTURE_POKEMONS_BASE_REWARD, GAIN_TOKENS_BASE_REWARD, MINE_LAYERS_BASE_REWARD, USE_OAK_ITEM_BASE_REWARD, ACTIVE_QUEST_MULTIPLIER, QUEST_CLICKS_PER_SECOND, QuestTypes, QUESTS_PER_SET, GameState, Pokeball, Currency, TypeEffectiveness, TypeEffectivenessValue, humanifyString, camelCaseToString, formatDate, formatTime, formatTimeShortWords, formatSecondsToTime, formatNumber, Region, randomIntBetween, randomElement, clipNumber, expRandomElement, TypeColor, ROUTE_KILLS_NEEDED, Environments, EnvironmentCssClass, Starter, StoneType, BattleItemType, PokemonItemType, PokeBlockColor, VitaminType, EnergyRestoreSize, EggItemType, EnergyRestoreEffect, KeyCodeToDirection, FossilToPokemon, PokemonToFossil, KantoGyms, JohtoGyms, HoennGyms, SinnohGyms, UnovaGyms, KalosGyms, RegionGyms, getGymIndex, KantoDungeons, JohtoDungeons, HoennDungeons, SinnohDungeons, UnovaDungeons, KalosDungeons, RegionDungeons, getDungeonIndex, StartingTowns, DockTowns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TICK_TIME\", function() { return TICK_TIME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BATTLE_TICK\", function() { return BATTLE_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BATTLE_FRONTIER_TICK\", function() { return BATTLE_FRONTIER_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UNDERGROUND_TICK\", function() { return UNDERGROUND_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_TIME\", function() { return DUNGEON_TIME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_TICK\", function() { return DUNGEON_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EFFECT_ENGINE_TICK\", function() { return EFFECT_ENGINE_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SAVE_TICK\", function() { return SAVE_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GYM_TIME\", function() { return GYM_TIME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GYM_COUNTDOWN\", function() { return GYM_COUNTDOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GYM_TICK\", function() { return GYM_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ACHIEVEMENT_TICK\", function() { return ACHIEVEMENT_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MIN_LOAD_TIME\", function() { return MIN_LOAD_TIME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAX_LOAD_TIME\", function() { return MAX_LOAD_TIME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MUTATION_TICK\", function() { return MUTATION_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WANDER_TICK\", function() { return WANDER_TICK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAX_AVAILABLE_REGION\", function() { return MAX_AVAILABLE_REGION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TotalPokemonsPerRegion\", function() { return TotalPokemonsPerRegion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ITEM_USE_TIME\", function() { return ITEM_USE_TIME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SECOND\", function() { return SECOND; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MINUTE\", function() { return MINUTE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HOUR\", function() { return HOUR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DAY\", function() { return DAY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WEEK\", function() { return WEEK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROAMING_MIN_CHANCE\", function() { return ROAMING_MIN_CHANCE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROAMING_MAX_CHANCE\", function() { return ROAMING_MAX_CHANCE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_CHANCE_BATTLE\", function() { return SHINY_CHANCE_BATTLE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_CHANCE_DUNGEON\", function() { return SHINY_CHANCE_DUNGEON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_CHANCE_SHOP\", function() { return SHINY_CHANCE_SHOP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_CHANCE_STONE\", function() { return SHINY_CHANCE_STONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_CHANCE_SAFARI\", function() { return SHINY_CHANCE_SAFARI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_CHANCE_BREEDING\", function() { return SHINY_CHANCE_BREEDING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_CHANCE_FARM\", function() { return SHINY_CHANCE_FARM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ITEM_PRICE_MULTIPLIER\", function() { return ITEM_PRICE_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ITEM_PRICE_DEDUCT\", function() { return ITEM_PRICE_DEDUCT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PLATE_VALUE\", function() { return PLATE_VALUE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BREEDING_ATTACK_BONUS\", function() { return BREEDING_ATTACK_BONUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BerryDistribution\", function() { return BerryDistribution; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MULCH_USE_TIME\", function() { return MULCH_USE_TIME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BOOST_MULCH_MULTIPLIER\", function() { return BOOST_MULCH_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RICH_MULCH_MULTIPLIER\", function() { return RICH_MULCH_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SURPRISE_MULCH_MULTIPLIER\", function() { return SURPRISE_MULCH_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AMAZE_MULCH_GROWTH_MULTIPLIER\", function() { return AMAZE_MULCH_GROWTH_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AMAZE_MULCH_PRODUCE_MULTIPLIER\", function() { return AMAZE_MULCH_PRODUCE_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AMAZE_MULCH_MUTATE_MULTIPLIER\", function() { return AMAZE_MULCH_MUTATE_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WANDER_RATE\", function() { return WANDER_RATE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BerryColor\", function() { return BerryColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_SIZE\", function() { return DUNGEON_SIZE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_CHEST_SHOW\", function() { return DUNGEON_CHEST_SHOW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_MAP_SHOW\", function() { return DUNGEON_MAP_SHOW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AchievementOption\", function() { return AchievementOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DungeonTile\", function() { return DungeonTile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTE_HELD_ITEM_CHANCE\", function() { return ROUTE_HELD_ITEM_CHANCE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_HELD_ITEM_CHANCE\", function() { return DUNGEON_HELD_ITEM_CHANCE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_SHARDS\", function() { return DUNGEON_SHARDS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DUNGEON_BOSS_SHARDS\", function() { return DUNGEON_BOSS_SHARDS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GYM_SHARDS\", function() { return GYM_SHARDS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SAFARI_BATTLE_CHANCE\", function() { return SAFARI_BATTLE_CHANCE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SAFARI_BASE_POKEBALL_COUNT\", function() { return SAFARI_BASE_POKEBALL_COUNT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEGAL_WALK_BLOCKS\", function() { return LEGAL_WALK_BLOCKS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SAFARI_OUT_OF_BALLS\", function() { return SAFARI_OUT_OF_BALLS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAIN_MONEY_BASE_REWARD\", function() { return GAIN_MONEY_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HATCH_EGGS_BASE_REWARD\", function() { return HATCH_EGGS_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHINY_BASE_REWARD\", function() { return SHINY_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFEAT_POKEMONS_BASE_REWARD\", function() { return DEFEAT_POKEMONS_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CAPTURE_POKEMONS_BASE_REWARD\", function() { return CAPTURE_POKEMONS_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAIN_TOKENS_BASE_REWARD\", function() { return GAIN_TOKENS_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MINE_LAYERS_BASE_REWARD\", function() { return MINE_LAYERS_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"USE_OAK_ITEM_BASE_REWARD\", function() { return USE_OAK_ITEM_BASE_REWARD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ACTIVE_QUEST_MULTIPLIER\", function() { return ACTIVE_QUEST_MULTIPLIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QUEST_CLICKS_PER_SECOND\", function() { return QUEST_CLICKS_PER_SECOND; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QuestTypes\", function() { return QuestTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QUESTS_PER_SET\", function() { return QUESTS_PER_SET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GameState\", function() { return GameState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Pokeball\", function() { return Pokeball; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Currency\", function() { return Currency; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeEffectiveness\", function() { return TypeEffectiveness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeEffectivenessValue\", function() { return TypeEffectivenessValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"humanifyString\", function() { return humanifyString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"camelCaseToString\", function() { return camelCaseToString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatDate\", function() { return formatDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTime\", function() { return formatTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTimeShortWords\", function() { return formatTimeShortWords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatSecondsToTime\", function() { return formatSecondsToTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatNumber\", function() { return formatNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Region\", function() { return Region; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomIntBetween\", function() { return randomIntBetween; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"randomElement\", function() { return randomElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clipNumber\", function() { return clipNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"expRandomElement\", function() { return expRandomElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeColor\", function() { return TypeColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ROUTE_KILLS_NEEDED\", function() { return ROUTE_KILLS_NEEDED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Environments\", function() { return Environments; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EnvironmentCssClass\", function() { return EnvironmentCssClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Starter\", function() { return Starter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StoneType\", function() { return StoneType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BattleItemType\", function() { return BattleItemType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PokemonItemType\", function() { return PokemonItemType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PokeBlockColor\", function() { return PokeBlockColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VitaminType\", function() { return VitaminType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EnergyRestoreSize\", function() { return EnergyRestoreSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EggItemType\", function() { return EggItemType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EnergyRestoreEffect\", function() { return EnergyRestoreEffect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyCodeToDirection\", function() { return KeyCodeToDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FossilToPokemon\", function() { return FossilToPokemon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PokemonToFossil\", function() { return PokemonToFossil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KantoGyms\", function() { return KantoGyms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JohtoGyms\", function() { return JohtoGyms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HoennGyms\", function() { return HoennGyms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SinnohGyms\", function() { return SinnohGyms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnovaGyms\", function() { return UnovaGyms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KalosGyms\", function() { return KalosGyms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegionGyms\", function() { return RegionGyms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGymIndex\", function() { return getGymIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KantoDungeons\", function() { return KantoDungeons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JohtoDungeons\", function() { return JohtoDungeons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HoennDungeons\", function() { return HoennDungeons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SinnohDungeons\", function() { return SinnohDungeons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnovaDungeons\", function() { return UnovaDungeons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KalosDungeons\", function() { return KalosDungeons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RegionDungeons\", function() { return RegionDungeons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDungeonIndex\", function() { return getDungeonIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StartingTowns\", function() { return StartingTowns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DockTowns\", function() { return DockTowns; });\n// Ticks\r\nconst TICK_TIME = 100;\r\nconst BATTLE_TICK = 1000;\r\nconst BATTLE_FRONTIER_TICK = 500;\r\nconst UNDERGROUND_TICK = 1000;\r\nconst DUNGEON_TIME = 6000;\r\nconst DUNGEON_TICK = 10;\r\nconst EFFECT_ENGINE_TICK = 1000;\r\nconst SAVE_TICK = 10000;\r\nconst GYM_TIME = 3000;\r\nconst GYM_COUNTDOWN = 1000;\r\nconst GYM_TICK = 10;\r\nconst ACHIEVEMENT_TICK = 1000;\r\nconst MIN_LOAD_TIME = 500; // 0.5 Seconds\r\nconst MAX_LOAD_TIME = 20000; // 20 Seconds\r\nconst MUTATION_TICK = 1000;\r\nconst WANDER_TICK = 1500;\r\nconst MAX_AVAILABLE_REGION = 3; // Sinnoh\r\nconst TotalPokemonsPerRegion = [\r\n    151,\r\n    251,\r\n    386,\r\n    493,\r\n    649,\r\n    721,\r\n    809,\r\n    893,\r\n];\r\nconst ITEM_USE_TIME = 30;\r\nconst SECOND = 1000;\r\nconst MINUTE = SECOND * 60;\r\nconst HOUR = MINUTE * 60;\r\nconst DAY = HOUR * 24;\r\nconst WEEK = DAY * 7;\r\nconst ROAMING_MIN_CHANCE = 8192;\r\nconst ROAMING_MAX_CHANCE = 4096;\r\n// Shinies\r\nconst SHINY_CHANCE_BATTLE = 8192;\r\nconst SHINY_CHANCE_DUNGEON = 4096;\r\nconst SHINY_CHANCE_SHOP = 2048;\r\nconst SHINY_CHANCE_STONE = 2048;\r\nconst SHINY_CHANCE_SAFARI = 2048;\r\nconst SHINY_CHANCE_BREEDING = 1024;\r\nconst SHINY_CHANCE_FARM = 1024;\r\nconst ITEM_PRICE_MULTIPLIER = 1.00045;\r\nconst ITEM_PRICE_DEDUCT = 1.0005;\r\nconst PLATE_VALUE = 100;\r\n// Breeding\r\nconst BREEDING_ATTACK_BONUS = 25;\r\n// Farming\r\nconst BerryDistribution = [0.39, 0.63, 0.78, 0.87, 0.93, 0.96, 0.98, 1];\r\nconst MULCH_USE_TIME = 300;\r\nconst BOOST_MULCH_MULTIPLIER = 1.5;\r\nconst RICH_MULCH_MULTIPLIER = 2;\r\nconst SURPRISE_MULCH_MULTIPLIER = 1.5;\r\nconst AMAZE_MULCH_GROWTH_MULTIPLIER = 1.25;\r\nconst AMAZE_MULCH_PRODUCE_MULTIPLIER = 1.5;\r\nconst AMAZE_MULCH_MUTATE_MULTIPLIER = 1.25;\r\nconst WANDER_RATE = 0.0005;\r\nconst BerryColor = [\r\n    '#EE8130',\r\n    '#A33EA1',\r\n    '#D685AD',\r\n    '#7AC74C',\r\n    '#F7D02C',\r\n    '#6390F0',\r\n    '#B7B7CE',\r\n    '#1C1C1C',\r\n];\r\n// Dungeons\r\nconst DUNGEON_SIZE = 5;\r\nconst DUNGEON_CHEST_SHOW = 2;\r\nconst DUNGEON_MAP_SHOW = 4;\r\n// Achievements\r\nvar AchievementOption;\r\n(function (AchievementOption) {\r\n    AchievementOption[AchievementOption[\"less\"] = 0] = \"less\";\r\n    AchievementOption[AchievementOption[\"equal\"] = 1] = \"equal\";\r\n    AchievementOption[AchievementOption[\"more\"] = 2] = \"more\";\r\n})(AchievementOption || (AchievementOption = {}));\r\nvar DungeonTile;\r\n(function (DungeonTile) {\r\n    DungeonTile[DungeonTile[\"empty\"] = 0] = \"empty\";\r\n    DungeonTile[DungeonTile[\"enemy\"] = 1] = \"enemy\";\r\n    DungeonTile[DungeonTile[\"chest\"] = 2] = \"chest\";\r\n    DungeonTile[DungeonTile[\"boss\"] = 3] = \"boss\";\r\n})(DungeonTile || (DungeonTile = {}));\r\n// Held item chance\r\nconst ROUTE_HELD_ITEM_CHANCE = 512;\r\nconst DUNGEON_HELD_ITEM_CHANCE = 128;\r\n// Shards from battle\r\nconst DUNGEON_SHARDS = 3;\r\nconst DUNGEON_BOSS_SHARDS = 20;\r\nconst GYM_SHARDS = 5;\r\nconst SAFARI_BATTLE_CHANCE = 5;\r\nconst SAFARI_BASE_POKEBALL_COUNT = 30;\r\nconst LEGAL_WALK_BLOCKS = [\r\n    0,\r\n    10,\r\n    11,\r\n    12,\r\n    13,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    20,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n];\r\nconst SAFARI_OUT_OF_BALLS = 'Game Over!<br>You have run out of safari balls to use.';\r\n// Quests\r\n// Numbers calculated by Dimava assumes ability to 1 shot on high routes and some use oak items,\r\n//   which are now nerfed slightly until upgraded, so those numbers may need further adjusting\r\nconst questBase = 1; // change this to scale all quest points\r\nconst GAIN_MONEY_BASE_REWARD = questBase * 0.0017;\r\nconst HATCH_EGGS_BASE_REWARD = questBase * 33;\r\nconst SHINY_BASE_REWARD = questBase * 3000;\r\nconst DEFEAT_POKEMONS_BASE_REWARD = questBase * 1;\r\n// Defeat reward divided by chance to catch (guessed)\r\nconst CAPTURE_POKEMONS_BASE_REWARD = DEFEAT_POKEMONS_BASE_REWARD / 0.8;\r\n// <route number> tokens gained for every capture\r\nconst GAIN_TOKENS_BASE_REWARD = CAPTURE_POKEMONS_BASE_REWARD / 13;\r\n// Average of 1/4 squares revealed = 75 energy ~ 12 minutes ~ 720 pokemons\r\nconst MINE_LAYERS_BASE_REWARD = questBase * 720;\r\n// not balanced at all for some oak items\r\nconst USE_OAK_ITEM_BASE_REWARD = DEFEAT_POKEMONS_BASE_REWARD;\r\nconst ACTIVE_QUEST_MULTIPLIER = 4;\r\n// Some active quests may be quicker if passive pokemon attack is used instead of active clicking\r\n// This number is used to estimate time taken in terms of clicks, for reward calculation\r\nconst QUEST_CLICKS_PER_SECOND = 5;\r\nconst QuestTypes = [\r\n    'DefeatPokemons',\r\n    'CapturePokemons',\r\n    'GainMoney',\r\n    'GainTokens',\r\n    'GainShards',\r\n    'HatchEggs',\r\n    'MineLayers',\r\n    'CatchShinies',\r\n    'DefeatGym',\r\n    'DefeatDungeon',\r\n    'UsePokeball',\r\n    'UseOakItem',\r\n    'HarvestBerriesQuest',\r\n];\r\nconst QUESTS_PER_SET = 10;\r\n/**\r\n * idle: The game is not doing anything, the battle view isn't shown\r\n * paused: The battle view is shown, but there are no game ticks\r\n * fighting: On a route and battling a pokemon\r\n * gym: Battling a gym\r\n * dungeon: Exploring a dungeon\r\n * safari: Exploring the safari zone\r\n * town: In a town/pre-dungeon, town view is not shown\r\n */\r\nvar GameState;\r\n(function (GameState) {\r\n    GameState[GameState[\"idle\"] = 0] = \"idle\";\r\n    GameState[GameState[\"paused\"] = 1] = \"paused\";\r\n    GameState[GameState[\"fighting\"] = 2] = \"fighting\";\r\n    GameState[GameState[\"gym\"] = 3] = \"gym\";\r\n    GameState[GameState[\"dungeon\"] = 4] = \"dungeon\";\r\n    GameState[GameState[\"safari\"] = 5] = \"safari\";\r\n    GameState[GameState[\"town\"] = 6] = \"town\";\r\n    GameState[GameState[\"shop\"] = 7] = \"shop\";\r\n    GameState[GameState[\"battleFrontier\"] = 8] = \"battleFrontier\";\r\n})(GameState || (GameState = {}));\r\nvar Pokeball;\r\n(function (Pokeball) {\r\n    Pokeball[Pokeball[\"None\"] = -1] = \"None\";\r\n    Pokeball[Pokeball[\"Pokeball\"] = 0] = \"Pokeball\";\r\n    Pokeball[Pokeball[\"Greatball\"] = 1] = \"Greatball\";\r\n    Pokeball[Pokeball[\"Ultraball\"] = 2] = \"Ultraball\";\r\n    Pokeball[Pokeball[\"Masterball\"] = 3] = \"Masterball\";\r\n    Pokeball[Pokeball[\"Fastball\"] = 4] = \"Fastball\";\r\n    Pokeball[Pokeball[\"Quickball\"] = 5] = \"Quickball\";\r\n    Pokeball[Pokeball[\"Timerball\"] = 6] = \"Timerball\";\r\n    Pokeball[Pokeball[\"Duskball\"] = 7] = \"Duskball\";\r\n    Pokeball[Pokeball[\"Luxuryball\"] = 8] = \"Luxuryball\";\r\n})(Pokeball || (Pokeball = {}));\r\nvar Currency;\r\n(function (Currency) {\r\n    Currency[Currency[\"money\"] = 0] = \"money\";\r\n    Currency[Currency[\"questPoint\"] = 1] = \"questPoint\";\r\n    Currency[Currency[\"dungeonToken\"] = 2] = \"dungeonToken\";\r\n    Currency[Currency[\"diamond\"] = 3] = \"diamond\";\r\n    Currency[Currency[\"farmPoint\"] = 4] = \"farmPoint\";\r\n    Currency[Currency[\"battlePoint\"] = 5] = \"battlePoint\";\r\n})(Currency || (Currency = {}));\r\nvar TypeEffectiveness;\r\n(function (TypeEffectiveness) {\r\n    TypeEffectiveness[TypeEffectiveness[\"Immune\"] = 0] = \"Immune\";\r\n    TypeEffectiveness[TypeEffectiveness[\"NotVery\"] = 1] = \"NotVery\";\r\n    TypeEffectiveness[TypeEffectiveness[\"Normal\"] = 2] = \"Normal\";\r\n    TypeEffectiveness[TypeEffectiveness[\"Very\"] = 3] = \"Very\";\r\n})(TypeEffectiveness || (TypeEffectiveness = {}));\r\nvar TypeEffectivenessValue;\r\n(function (TypeEffectivenessValue) {\r\n    TypeEffectivenessValue[TypeEffectivenessValue[\"Immune\"] = 0] = \"Immune\";\r\n    TypeEffectivenessValue[TypeEffectivenessValue[\"NotVery\"] = 0.5] = \"NotVery\";\r\n    TypeEffectivenessValue[TypeEffectivenessValue[\"Normal\"] = 1] = \"Normal\";\r\n    TypeEffectivenessValue[TypeEffectivenessValue[\"Very\"] = 2] = \"Very\";\r\n})(TypeEffectivenessValue || (TypeEffectivenessValue = {}));\r\nfunction humanifyString(str) {\r\n    return str.replace(/[_-]+/g, ' ');\r\n}\r\nfunction camelCaseToString(str) {\r\n    return str.replace(/[\\s_-]?([A-Z])/g, ' $1').replace(/\\b\\w/g, (w) => (w.replace(/\\w/, (c) => c.toUpperCase()))).trim();\r\n}\r\nfunction formatDate(date) {\r\n    return date.toISOString().replace(/T/, ' ').replace(/.\\d+Z/, '');\r\n}\r\nfunction formatTime(input) {\r\n    if (input === 0) {\r\n        return 'Ready';\r\n    }\r\n    const time = parseInt(`${input}`, 10); // don't forget the second param\r\n    const hours = `${Math.floor(time / 3600)}`.padStart(2, '0');\r\n    const minutes = `${Math.floor((time - (hours * 3600)) / 60)}`.padStart(2, '0');\r\n    const seconds = `${time - (hours * 3600) - (minutes * 60)}`.padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nfunction formatTimeShortWords(input) {\r\n    // Temporarily recast to number until everything is in modules\r\n    if (Number.isNaN(Number(input)) || input === 0) {\r\n        return 'now';\r\n    }\r\n    const time = Math.abs(input);\r\n    if (time > DAY) {\r\n        const days = Math.ceil(time / DAY);\r\n        return `${time % DAY ? '< ' : ''}${days} day${days === 1 ? '' : 's'}`;\r\n    }\r\n    if (time > HOUR) {\r\n        const hours = Math.ceil(time / HOUR);\r\n        return `${time % HOUR ? '< ' : ''}${hours} hour${hours === 1 ? '' : 's'}`;\r\n    }\r\n    const minutes = Math.ceil(time / MINUTE);\r\n    return `${time % MINUTE ? '< ' : ''}${minutes} min${minutes === 1 ? '' : 's'}`;\r\n}\r\nfunction formatSecondsToTime(input) {\r\n    // Temporarily recast to number until everything is in modules\r\n    if (Number.isNaN(Number(input)) || input === 0) {\r\n        return '-';\r\n    }\r\n    let time = Math.abs(input * 1000);\r\n    const times = [];\r\n    if (time >= WEEK) {\r\n        const weeks = Math.floor(time / WEEK);\r\n        times.push(`${weeks} week${weeks === 1 ? '' : 's'}`);\r\n        time %= WEEK;\r\n    }\r\n    if (time >= DAY) {\r\n        const days = Math.floor(time / DAY);\r\n        times.push(`${days} day${days === 1 ? '' : 's'}`);\r\n        time %= DAY;\r\n    }\r\n    if (time >= HOUR) {\r\n        const hours = Math.floor(time / HOUR);\r\n        times.push(`${hours} hour${hours === 1 ? '' : 's'}`);\r\n        time %= HOUR;\r\n    }\r\n    if (time >= MINUTE) {\r\n        const minutes = Math.floor(time / MINUTE);\r\n        times.push(`${minutes} min${minutes === 1 ? '' : 's'}`);\r\n        time %= MINUTE;\r\n    }\r\n    if (time >= SECOND) {\r\n        const seconds = Math.floor(time / SECOND);\r\n        times.push(`${seconds} sec${seconds === 1 ? '' : 's'}`);\r\n    }\r\n    return times.join('</br>');\r\n}\r\nfunction formatNumber(input) {\r\n    let num = Number(input); // Temporary cast until everything is in modules\r\n    if (Number.isNaN(+num)) {\r\n        return '0';\r\n    }\r\n    if (num >= 1e9) {\r\n        num = Math.floor(num / 1e8);\r\n        num = num < 100 ? num / 10 : Math.floor(num / 10);\r\n        return `${num}B`;\r\n    }\r\n    if (num >= 1e6) {\r\n        num = Math.floor(num / 1e5);\r\n        num = num < 100 ? num / 10 : Math.floor(num / 10);\r\n        return `${num}M`;\r\n    }\r\n    if (num >= 1e3) {\r\n        num = Math.floor(num / 1e2);\r\n        num = num < 100 ? num / 10 : Math.floor(num / 10);\r\n        return `${num}K`;\r\n    }\r\n    return num.toString();\r\n}\r\nvar Region;\r\n(function (Region) {\r\n    Region[Region[\"none\"] = -1] = \"none\";\r\n    Region[Region[\"kanto\"] = 0] = \"kanto\";\r\n    Region[Region[\"johto\"] = 1] = \"johto\";\r\n    Region[Region[\"hoenn\"] = 2] = \"hoenn\";\r\n    Region[Region[\"sinnoh\"] = 3] = \"sinnoh\";\r\n    Region[Region[\"unova\"] = 4] = \"unova\";\r\n    Region[Region[\"kalos\"] = 5] = \"kalos\";\r\n    Region[Region[\"alola\"] = 6] = \"alola\";\r\n    Region[Region[\"galar\"] = 7] = \"galar\";\r\n})(Region || (Region = {}));\r\nfunction randomIntBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nfunction randomElement(array) {\r\n    return array[randomIntBetween(0, array.length - 1)];\r\n}\r\nfunction clipNumber(num, min, max) {\r\n    return Math.min(Math.max(num, min), max);\r\n}\r\n// Return a random element from the array, with an exponential distribution\r\n// The last element has a 1/ratio chance of being chosen, one before last is 1/(ratio^2), etc\r\n// The logarithm is clipped up to 0, so the first two elements will have equal chance\r\nfunction expRandomElement(array, ratio) {\r\n    const r = Math.random();\r\n    const logr = Math.log(r) / Math.log(ratio);\r\n    const n = Math.floor(logr + array.length);\r\n    const x = clipNumber(n, 0, array.length - 1);\r\n    return array[x];\r\n}\r\nconst TypeColor = [\r\n    '#A8A77A',\r\n    '#EE8130',\r\n    '#6390F0',\r\n    '#F7D02C',\r\n    '#7AC74C',\r\n    '#96D9D6',\r\n    '#C22E28',\r\n    '#A33EA1',\r\n    '#E2BF65',\r\n    '#A98FF3',\r\n    '#F95587',\r\n    '#A6B91A',\r\n    '#B6A136',\r\n    '#735797',\r\n    '#6F35FC',\r\n    '#705746',\r\n    '#B7B7CE',\r\n    '#D685AD',\r\n];\r\nconst ROUTE_KILLS_NEEDED = 10;\r\nconst Environments = {\r\n    Water: {\r\n        0: new Set(['Cerulean City', 19, 20, 21, 24]),\r\n        1: new Set([40, 41, 'Slowpoke Well']),\r\n        2: new Set([105, 106, 107, 108, 109, 118, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134]),\r\n        3: new Set([218, 219, 220, 223, 230, 'Lake Verity', 'Lake Valor', 'Pastoria City']),\r\n        4: new Set([17, 18, 21, 24, 'Undella Town', 'Humilau City']),\r\n    },\r\n    Ice: {\r\n        0: new Set(['Seafoam Islands']),\r\n        1: new Set(['Mahogany Town', 'Ice Path']),\r\n        2: new Set(['Shoal Cave', 'Sootopolis City']),\r\n        3: new Set([216, 217, 'Lake Acuity', 'Snowpoint City']),\r\n        4: new Set(['Giant Chasm']),\r\n    },\r\n    Forest: {\r\n        0: new Set([25, 'Fuchsia City', 'Viridian Forest']),\r\n        1: new Set([36, 38, 43, 'Azalea Town', 'Ilex Forest']),\r\n        2: new Set([119, 'Petalburg Woods']),\r\n        3: new Set([201, 204, 'Eterna Forest', 'Eterna City', 'Fullmoon Island', 'Newmoon Island']),\r\n        4: new Set([6, 'Lostlorn Forest', 'Pinwheel Forest', 'Pledge Grove', 'Floccesy Town']),\r\n    },\r\n    Cave: {\r\n        0: new Set(['Pewter City', 'Digletts Cave', 'Mt. Moon', 'Rock Tunnel', 'Victory Road']),\r\n        1: new Set(['Cianwood City', 'Ruins of Alph', 'Union Cave', 'Mt Mortar', 'Dark Cave']),\r\n        2: new Set(['Rustboro City', 'Dewford Town', 'Rusturf Tunnel', 'Granite Cave', 'New Mauville', 'Meteor Falls', 'Victory Road Hoenn', 'Seafloor Cavern']),\r\n        3: new Set(['Oreburgh Gate', 'Oreburgh City', 'Ravaged Path', 'Wayward Cave', 'Mt. Coronet South', 'Iron Island', 'Mt. Coronet North', 'Victory Road Sinnoh']),\r\n        4: new Set(['Seaside Cave', 'Twist Mountain', 'Reversal Mountain', 'Relic Passage', 'Relic Castle', 'Victory Road Unova']),\r\n    },\r\n    GemCave: {\r\n        0: new Set(['Viridian City', 'Cerulean Cave']),\r\n        1: new Set(['Blackthorn City', 'Mt Silver', 'Whirl Islands']),\r\n        2: new Set(['Cave of Origin', 'Sky Pillar', 'Sealed Chamber']),\r\n        3: new Set(['Spear Pillar', 'Hall of Origin', 'Stark Mountain']),\r\n        4: new Set(['Chargestone Cave', 'Mistralton Cave', 'Cave of Being']),\r\n    },\r\n    PowerPlant: {\r\n        0: new Set(['Vermillion City', 'Power Plant']),\r\n        1: new Set(['Tin Tower']),\r\n        2: new Set(['Mauville City']),\r\n        3: new Set(['Sunyshore City']),\r\n        4: new Set(['Castelia Sewers', 'Virbank City', 'Nimbasa City']),\r\n    },\r\n    Mansion: {\r\n        0: new Set(['Cinnabar Island', 'Pokemon Mansion']),\r\n        1: new Set(['Olivine City', 'Burned Tower']),\r\n        2: new Set(['Lavaridge Town', 'Petalburg City', 'Jagged Pass', 'Fiery Path', 'Mt. Chimney']),\r\n        3: new Set(['Old Chateau', 'Veilstone City', 'Canalave City', 'Snowpoint Temple']),\r\n        4: new Set(['Castelia City', 'Liberty Garden', 'Dreamyard', 'Mistralton City', 'Opelucid City']),\r\n    },\r\n    Graveyard: {\r\n        0: new Set(['Saffron City', 'Pokemon Tower']),\r\n        1: new Set(['Ecruteak City']),\r\n        2: new Set(['Mossdeep City', 'Mt. Pyre']),\r\n        3: new Set(['Hearthome City']),\r\n        4: new Set(['Celestial Tower']),\r\n    },\r\n};\r\nconst EnvironmentCssClass = {\r\n    Water: 'water',\r\n    Ice: 'ice',\r\n    Forest: 'forest',\r\n    Cave: 'cave',\r\n    GemCave: 'cave-gem',\r\n    PowerPlant: 'power-plant',\r\n    Mansion: 'mansion',\r\n    Graveyard: 'graveyard',\r\n};\r\nvar Starter;\r\n(function (Starter) {\r\n    Starter[Starter[\"None\"] = -1] = \"None\";\r\n    Starter[Starter[\"Bulbasaur\"] = 0] = \"Bulbasaur\";\r\n    Starter[Starter[\"Charmander\"] = 1] = \"Charmander\";\r\n    Starter[Starter[\"Squirtle\"] = 2] = \"Squirtle\";\r\n    Starter[Starter[\"Pikachu\"] = 3] = \"Pikachu\";\r\n})(Starter || (Starter = {}));\r\nvar StoneType;\r\n(function (StoneType) {\r\n    StoneType[StoneType[\"None\"] = -1] = \"None\";\r\n    StoneType[StoneType[\"Fire_stone\"] = 0] = \"Fire_stone\";\r\n    StoneType[StoneType[\"Water_stone\"] = 1] = \"Water_stone\";\r\n    StoneType[StoneType[\"Thunder_stone\"] = 2] = \"Thunder_stone\";\r\n    StoneType[StoneType[\"Leaf_stone\"] = 3] = \"Leaf_stone\";\r\n    StoneType[StoneType[\"Moon_stone\"] = 4] = \"Moon_stone\";\r\n    StoneType[StoneType[\"Sun_stone\"] = 5] = \"Sun_stone\";\r\n    StoneType[StoneType[\"Trade_stone\"] = 6] = \"Trade_stone\";\r\n    StoneType[StoneType[\"Dragon_scale\"] = 7] = \"Dragon_scale\";\r\n    StoneType[StoneType[\"Metal_coat\"] = 8] = \"Metal_coat\";\r\n    StoneType[StoneType[\"Kings_rock\"] = 9] = \"Kings_rock\";\r\n    StoneType[StoneType[\"Upgrade\"] = 10] = \"Upgrade\";\r\n    StoneType[StoneType[\"Soothe_bell\"] = 11] = \"Soothe_bell\";\r\n    StoneType[StoneType[\"Deepsea_tooth\"] = 12] = \"Deepsea_tooth\";\r\n    StoneType[StoneType[\"Deepsea_scale\"] = 13] = \"Deepsea_scale\";\r\n    StoneType[StoneType[\"Dawn_stone\"] = 14] = \"Dawn_stone\";\r\n    StoneType[StoneType[\"Dusk_stone\"] = 15] = \"Dusk_stone\";\r\n    StoneType[StoneType[\"Shiny_stone\"] = 16] = \"Shiny_stone\";\r\n    StoneType[StoneType[\"Dubious_disc\"] = 17] = \"Dubious_disc\";\r\n    StoneType[StoneType[\"Electirizer\"] = 18] = \"Electirizer\";\r\n    StoneType[StoneType[\"Magmarizer\"] = 19] = \"Magmarizer\";\r\n    StoneType[StoneType[\"Protector\"] = 20] = \"Protector\";\r\n    StoneType[StoneType[\"Reaper_cloth\"] = 21] = \"Reaper_cloth\";\r\n    StoneType[StoneType[\"Razor_claw\"] = 22] = \"Razor_claw\";\r\n    StoneType[StoneType[\"Razor_fang\"] = 23] = \"Razor_fang\";\r\n    StoneType[StoneType[\"Prism_scale\"] = 24] = \"Prism_scale\";\r\n    StoneType[StoneType[\"Sachet\"] = 25] = \"Sachet\";\r\n    StoneType[StoneType[\"Whipped_dream\"] = 26] = \"Whipped_dream\";\r\n})(StoneType || (StoneType = {}));\r\nvar BattleItemType;\r\n(function (BattleItemType) {\r\n    BattleItemType[\"xAttack\"] = \"xAttack\";\r\n    BattleItemType[\"xClick\"] = \"xClick\";\r\n    BattleItemType[\"Lucky_egg\"] = \"Lucky_egg\";\r\n    BattleItemType[\"Token_collector\"] = \"Token_collector\";\r\n    BattleItemType[\"Item_magnet\"] = \"Item_magnet\";\r\n    BattleItemType[\"Lucky_incense\"] = \"Lucky_incense\";\r\n})(BattleItemType || (BattleItemType = {}));\r\nvar PokemonItemType;\r\n(function (PokemonItemType) {\r\n    PokemonItemType[PokemonItemType[\"Eevee\"] = 0] = \"Eevee\";\r\n    PokemonItemType[PokemonItemType[\"Porygon\"] = 1] = \"Porygon\";\r\n    PokemonItemType[PokemonItemType[\"Jynx\"] = 2] = \"Jynx\";\r\n    PokemonItemType[PokemonItemType[\"Mr. Mime\"] = 3] = \"Mr. Mime\";\r\n    PokemonItemType[PokemonItemType[\"Lickitung\"] = 4] = \"Lickitung\";\r\n    PokemonItemType[PokemonItemType[\"Togepi\"] = 5] = \"Togepi\";\r\n    PokemonItemType[PokemonItemType[\"Beldum\"] = 6] = \"Beldum\";\r\n    PokemonItemType[PokemonItemType[\"Skorupi\"] = 7] = \"Skorupi\";\r\n    PokemonItemType[PokemonItemType[\"Combee\"] = 8] = \"Combee\";\r\n    PokemonItemType[PokemonItemType[\"Burmy (plant)\"] = 9] = \"Burmy (plant)\";\r\n    PokemonItemType[PokemonItemType[\"Spiritomb\"] = 10] = \"Spiritomb\";\r\n    PokemonItemType[PokemonItemType[\"Cherubi\"] = 11] = \"Cherubi\";\r\n    PokemonItemType[PokemonItemType[\"Zorua\"] = 12] = \"Zorua\";\r\n    PokemonItemType[PokemonItemType[\"Meloetta (pirouette)\"] = 13] = \"Meloetta (pirouette)\";\r\n})(PokemonItemType || (PokemonItemType = {}));\r\nvar PokeBlockColor;\r\n(function (PokeBlockColor) {\r\n    PokeBlockColor[PokeBlockColor[\"Black\"] = 0] = \"Black\";\r\n    PokeBlockColor[PokeBlockColor[\"Red\"] = 1] = \"Red\";\r\n    PokeBlockColor[PokeBlockColor[\"Gold\"] = 2] = \"Gold\";\r\n    PokeBlockColor[PokeBlockColor[\"Purple\"] = 3] = \"Purple\";\r\n    PokeBlockColor[PokeBlockColor[\"Gray\"] = 4] = \"Gray\";\r\n    PokeBlockColor[PokeBlockColor[\"White\"] = 5] = \"White\";\r\n})(PokeBlockColor || (PokeBlockColor = {}));\r\nvar VitaminType;\r\n(function (VitaminType) {\r\n    VitaminType[VitaminType[\"Protein\"] = 0] = \"Protein\";\r\n    VitaminType[VitaminType[\"RareCandy\"] = 1] = \"RareCandy\";\r\n})(VitaminType || (VitaminType = {}));\r\nvar EnergyRestoreSize;\r\n(function (EnergyRestoreSize) {\r\n    EnergyRestoreSize[EnergyRestoreSize[\"SmallRestore\"] = 0] = \"SmallRestore\";\r\n    EnergyRestoreSize[EnergyRestoreSize[\"MediumRestore\"] = 1] = \"MediumRestore\";\r\n    EnergyRestoreSize[EnergyRestoreSize[\"LargeRestore\"] = 2] = \"LargeRestore\";\r\n})(EnergyRestoreSize || (EnergyRestoreSize = {}));\r\nvar EggItemType;\r\n(function (EggItemType) {\r\n    EggItemType[EggItemType[\"Fire_egg\"] = 0] = \"Fire_egg\";\r\n    EggItemType[EggItemType[\"Water_egg\"] = 1] = \"Water_egg\";\r\n    EggItemType[EggItemType[\"Grass_egg\"] = 2] = \"Grass_egg\";\r\n    EggItemType[EggItemType[\"Fighting_egg\"] = 3] = \"Fighting_egg\";\r\n    EggItemType[EggItemType[\"Electric_egg\"] = 4] = \"Electric_egg\";\r\n    EggItemType[EggItemType[\"Dragon_egg\"] = 5] = \"Dragon_egg\";\r\n    EggItemType[EggItemType[\"Pokemon_egg\"] = 6] = \"Pokemon_egg\";\r\n    EggItemType[EggItemType[\"Mystery_egg\"] = 7] = \"Mystery_egg\";\r\n})(EggItemType || (EggItemType = {}));\r\nconst EnergyRestoreEffect = {\r\n    SmallRestore: 0.1,\r\n    MediumRestore: 0.2,\r\n    LargeRestore: 0.5,\r\n};\r\nconst KeyCodeToDirection = {\r\n    ArrowUp: 'up',\r\n    ArrowLeft: 'left',\r\n    ArrowDown: 'down',\r\n    ArrowRight: 'right',\r\n    KeyW: 'up',\r\n    KeyA: 'left',\r\n    KeyS: 'down',\r\n    KeyD: 'right',\r\n};\r\nconst FossilToPokemon = {\r\n    'Helix Fossil': 'Omanyte',\r\n    'Dome Fossil': 'Kabuto',\r\n    'Old Amber': 'Aerodactyl',\r\n    'Root Fossil': 'Lileep',\r\n    'Claw Fossil': 'Anorith',\r\n    'Armor Fossil': 'Shieldon',\r\n    'Skull Fossil': 'Cranidos',\r\n    'Cover Fossil': 'Tirtouga',\r\n    'Plume Fossil': 'Archen',\r\n};\r\n// Used for image name\r\nconst PokemonToFossil = {\r\n    Omanyte: 'Helix Fossil',\r\n    Kabuto: 'Dome Fossil',\r\n    Aerodactyl: 'Old Amber',\r\n    Lileep: 'Root Fossil',\r\n    Anorith: 'Claw Fossil',\r\n    Shieldon: 'Armor Fossil',\r\n    Cranidos: 'Skull Fossil',\r\n    Tirtouga: 'Cover Fossil',\r\n    Archen: 'Plume Fossil',\r\n};\r\n// For random quest, name matches entry in gymList (created in Gym.ts)\r\nconst KantoGyms = [\r\n    'Pewter City',\r\n    'Cerulean City',\r\n    'Vermillion City',\r\n    'Celadon City',\r\n    'Saffron City',\r\n    'Fuchsia City',\r\n    'Cinnabar Island',\r\n    'Viridian City',\r\n    'Elite Lorelei',\r\n    'Elite Bruno',\r\n    'Elite Agatha',\r\n    'Elite Lance',\r\n    'Champion Blue',\r\n];\r\nconst JohtoGyms = [\r\n    'Violet City',\r\n    'Azalea Town',\r\n    'Goldenrod City',\r\n    'Ecruteak City',\r\n    'Cianwood City',\r\n    'Olivine City',\r\n    'Mahogany Town',\r\n    'Blackthorn City',\r\n    'Elite Will',\r\n    'Elite Koga',\r\n    'Elite Bruno2',\r\n    'Elite Karen',\r\n    'Champion Lance',\r\n];\r\nconst HoennGyms = [\r\n    'Rustboro City',\r\n    'Dewford Town',\r\n    'Mauville City',\r\n    'Lavaridge Town',\r\n    'Petalburg City',\r\n    'Fortree City',\r\n    'Mossdeep City',\r\n    'Sootopolis City',\r\n    'Elite Sidney',\r\n    'Elite Phoebe',\r\n    'Elite Glacia',\r\n    'Elite Drake',\r\n    'Champion Wallace',\r\n];\r\nconst SinnohGyms = [\r\n    'Oreburgh City',\r\n    'Eterna City',\r\n    'Hearthome City',\r\n    'Veilstone City',\r\n    'Pastoria City',\r\n    'Canalave City',\r\n    'Snowpoint City',\r\n    'Sunyshore City',\r\n    'Elite Aaron',\r\n    'Elite Bertha',\r\n    'Elite Flint',\r\n    'Elite Lucian',\r\n    'Champion Cynthia',\r\n];\r\nconst UnovaGyms = [\r\n    'Aspertia City',\r\n    'Virbank City',\r\n    'Castelia City',\r\n    'Nimbasa City',\r\n    'Driftveil City',\r\n    'Mistralton City',\r\n    'Opelucid City',\r\n    'Humilau City',\r\n    'Elite Shauntal',\r\n    'Elite Marshal',\r\n    'Elite Grimsley',\r\n    'Elite Caitlin',\r\n    'Champion Iris',\r\n];\r\nconst KalosGyms = [\r\n    'Santalune City',\r\n    'Cyllage City',\r\n    'Shalour City',\r\n    'Coumarine City',\r\n    'Lumiose City',\r\n    'Laverre City',\r\n    'Anistar City',\r\n    'Snowbelle City',\r\n    'Elite Malva',\r\n    'Elite Siebold',\r\n    'Elite Wikstrom',\r\n    'Elite Drasna',\r\n    'Champion Diantha',\r\n];\r\nconst RegionGyms = [\r\n    KantoGyms,\r\n    JohtoGyms,\r\n    HoennGyms,\r\n    SinnohGyms,\r\n    UnovaGyms,\r\n    KalosGyms,\r\n];\r\nfunction getGymIndex(gym) {\r\n    return RegionGyms.flat().findIndex((g) => g === gym);\r\n}\r\nconst KantoDungeons = [\r\n    'Viridian Forest',\r\n    'Digletts Cave',\r\n    'Mt. Moon',\r\n    'Rock Tunnel',\r\n    'Power Plant',\r\n    'Pokemon Tower',\r\n    'Seafoam Islands',\r\n    'Pokemon Mansion',\r\n    'Victory Road',\r\n    'Cerulean Cave',\r\n];\r\nconst JohtoDungeons = [\r\n    'Sprout Tower',\r\n    'Ruins of Alph',\r\n    'Union Cave',\r\n    'Slowpoke Well',\r\n    'Ilex Forest',\r\n    'Burned Tower',\r\n    'Tin Tower',\r\n    'Whirl Islands',\r\n    'Mt Mortar',\r\n    'Ice Path',\r\n    'Dark Cave',\r\n    'Mt Silver',\r\n];\r\nconst HoennDungeons = [\r\n    'Petalburg Woods',\r\n    'Rusturf Tunnel',\r\n    'Granite Cave',\r\n    'Jagged Pass',\r\n    'Fiery Path',\r\n    'Mt. Chimney',\r\n    'Meteor Falls',\r\n    'Mt. Pyre',\r\n    'New Mauville',\r\n    'Shoal Cave',\r\n    'Seafloor Cavern',\r\n    'Sealed Chamber',\r\n    'Cave of Origin',\r\n    'Sky Pillar',\r\n    'Victory Road Hoenn',\r\n];\r\nconst SinnohDungeons = [\r\n    'Oreburgh Gate',\r\n    'Ravaged Path',\r\n    'Eterna Forest',\r\n    'Old Chateau',\r\n    'Wayward Cave',\r\n    'Mt. Coronet South',\r\n    'Iron Island',\r\n    'Mt. Coronet North',\r\n    'Lake Verity',\r\n    'Lake Valor',\r\n    'Lake Acuity',\r\n    'Distortion World',\r\n    'Victory Road Sinnoh',\r\n    'Spear Pillar',\r\n    'Fullmoon Island',\r\n    'Newmoon Island',\r\n    'Flower Paradise',\r\n    'Snowpoint Temple',\r\n    'Stark Mountain',\r\n    'Hall of Origin',\r\n];\r\nconst UnovaDungeons = [\r\n    'Pledge Grove',\r\n    'Floccesy Ranch',\r\n    'Liberty Garden',\r\n    'Castelia Sewers',\r\n    'Relic Passage',\r\n    'Relic Castle',\r\n    'Lostlorn Forest',\r\n    'Chargestone Cave',\r\n    'Mistralton Cave',\r\n    'Celestial Tower',\r\n    'Reversal Mountain',\r\n    'Seaside Cave',\r\n    'Giant Chasm',\r\n    'Abundant Shrine',\r\n    'Cave of Being',\r\n    'Victory Road Unova',\r\n    'Twist Mountain',\r\n    'Dragonspiral Tower',\r\n    'Moor of Icirrus',\r\n    'Pinwheel Forest',\r\n    'Dreamyard',\r\n    'P2 Laboratory',\r\n];\r\nconst KalosDungeons = [\r\n    'Santalune Forest',\r\n    'Parfum Palace',\r\n    'Connecting Cave',\r\n    'Glittering Cave',\r\n    'Reflection Cave',\r\n    // 'Tower of Mastery',\r\n    'Azure Bay',\r\n    // 'Sea Spirit's Den',\r\n    // 'Kalos Power Plant',\r\n    // 'Pokéball Factory',\r\n    'Lost Hotel',\r\n    'Frost Cavern',\r\n    'Team Flare Secret HQ',\r\n    'Terminus Cave',\r\n    'Pokémon Village',\r\n    'Victory Road Kalos',\r\n];\r\nconst RegionDungeons = [\r\n    KantoDungeons,\r\n    JohtoDungeons,\r\n    HoennDungeons,\r\n    SinnohDungeons,\r\n    UnovaDungeons,\r\n    KalosDungeons,\r\n];\r\nfunction getDungeonIndex(dungeon) {\r\n    return RegionDungeons.flat().findIndex((d) => d === dungeon);\r\n}\r\nconst StartingTowns = [\r\n    'Pallet Town',\r\n    'New Bark Town',\r\n    'Littleroot Town',\r\n    'Twinleaf Town',\r\n    'Aspertia City',\r\n    'Vaniville Town',\r\n];\r\nconst DockTowns = [\r\n    'Vermillion City',\r\n    'Olivine City',\r\n    'Slateport City',\r\n    'Canalave City',\r\n    'Castelia City',\r\n    'Coumarine City',\r\n];\r\n\n\n//# sourceURL=webpack:///./src/modules/GameConstants.ts?");

/***/ }),

/***/ "./src/modules/GameHelper.ts":
/*!***********************************!*\
  !*** ./src/modules/GameHelper.ts ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GameHelper; });\n// For helper functions that may be needed across all files\r\n// TODO: Convert this to not be a class after everything is TS modules\r\nclass GameHelper {\r\n    static incrementObservable(obs, amt = 1) {\r\n        if (typeof obs !== 'function') {\r\n            return;\r\n        }\r\n        const trueAmount = (Number.isNaN(amt) || amt === 0) ? 1 : amt;\r\n        obs(obs() + trueAmount);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    static enumLength(enumerable) {\r\n        return Object.keys(enumerable).length / 2;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    static enumStrings(enumerable) {\r\n        return Object.keys(enumerable).filter((k) => Number.isNaN(Number(k)));\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    static enumNumbers(enumerable) {\r\n        return Object.keys(enumerable).map(Number).filter((k) => !Number.isNaN(k));\r\n    }\r\n    static tick() {\r\n        this.counter = 0;\r\n        this.updateTime();\r\n    }\r\n    static updateTime() {\r\n        const now = new Date();\r\n        if (now.getDate() === GameHelper.tomorrow.getDate()) {\r\n            GameHelper.tomorrow = GameHelper.getTomorrow();\r\n        }\r\n        GameHelper.currentTime(new Date());\r\n    }\r\n    static formatAmount(n) {\r\n        if (n >= 1e9) {\r\n            return `${Math.floor(n / 1e9)}b`;\r\n        }\r\n        if (n >= 1e6) {\r\n            return `${Math.floor(n / 1e6)}m`;\r\n        }\r\n        if (n >= 1e3) {\r\n            return `${Math.floor(n / 1e3)}k`;\r\n        }\r\n        return `${n}`;\r\n    }\r\n    static getIndexFromDistribution(a) {\r\n        const rand = Math.random();\r\n        for (let i = 0; i < a.length; i += 1) {\r\n            if (rand <= a[i]) {\r\n                return i;\r\n            }\r\n        }\r\n        // If none matched for whatever reason (should never happen) return the\r\n        // last index\r\n        return a.length - 1;\r\n    }\r\n    static createArray(start, max, step) {\r\n        const array = [];\r\n        for (let i = start; i <= max; i += step) {\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    }\r\n    static anOrA(name) {\r\n        return ['a', 'e', 'i', 'o', 'u'].includes(name[0].toLowerCase()) ? 'an' : 'a';\r\n    }\r\n    static shallowEqual(object1, object2) {\r\n        const keys1 = Object.keys(object1);\r\n        const keys2 = Object.keys(object2);\r\n        if (keys1.length !== keys2.length) {\r\n            return false;\r\n        }\r\n        return keys1.every((key) => object1[key] === object2[key]);\r\n    }\r\n    // Find the largest integer between min and max that does not return true when passed to testTooHigh, using a binary search\r\n    static binarySearch(testTooHigh, min, max) {\r\n        if (max - min <= 1)\r\n            return min;\r\n        const mid = Math.floor((max + min) / 2);\r\n        const [newMin, newMax] = testTooHigh(mid) ? [min, mid] : [mid, max];\r\n        return this.binarySearch(testTooHigh, newMin, newMax);\r\n    }\r\n    static getTomorrow() {\r\n        const tomorrow = new Date();\r\n        tomorrow.setDate(tomorrow.getDate() + 1);\r\n        tomorrow.setHours(0);\r\n        tomorrow.setMinutes(0);\r\n        tomorrow.setSeconds(0);\r\n        tomorrow.setMilliseconds(0);\r\n        return tomorrow;\r\n    }\r\n    static twoDigitNumber(n) {\r\n        // For use in clocks / showing time\r\n        // Turns 4 into 04, does nothing to 23, turns 173 into 73\r\n        return (`0${n}`).slice(-2);\r\n    }\r\n}\r\nGameHelper.counter = 0;\r\nGameHelper.currentTime = ko.observable(new Date());\r\nGameHelper.tomorrow = GameHelper.getTomorrow();\r\nGameHelper.msUntilTomorrow = ko.pureComputed(() => Number(GameHelper.tomorrow) - Number(GameHelper.currentTime()));\r\nGameHelper.formattedTimeUntilTomorrow = ko.pureComputed(() => {\r\n    let milliseconds = GameHelper.msUntilTomorrow();\r\n    const hours = Math.floor(milliseconds / GameHelper.MS_IN_HOUR);\r\n    milliseconds -= hours * GameHelper.MS_IN_HOUR;\r\n    const minutes = Math.floor(milliseconds / GameHelper.MS_IN_MIN);\r\n    return `${hours}:${GameHelper.twoDigitNumber(minutes)}`;\r\n});\r\nGameHelper.formattedLetterTimeUntilTomorrow = ko.pureComputed(() => {\r\n    let milliseconds = GameHelper.msUntilTomorrow();\r\n    const hours = Math.floor(milliseconds / GameHelper.MS_IN_HOUR);\r\n    milliseconds -= hours * GameHelper.MS_IN_HOUR;\r\n    const minutes = Math.floor(milliseconds / GameHelper.MS_IN_MIN);\r\n    return `${hours}h${GameHelper.twoDigitNumber(minutes)}m`;\r\n});\r\nGameHelper.MS_IN_MIN = 1000 * 60;\r\nGameHelper.MS_IN_HOUR = GameHelper.MS_IN_MIN * 60;\r\n\n\n//# sourceURL=webpack:///./src/modules/GameHelper.ts?");

/***/ }),

/***/ "./src/modules/enums/Badges.ts":
/*!*************************************!*\
  !*** ./src/modules/enums/Badges.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar BadgeEnums;\r\n(function (BadgeEnums) {\r\n    BadgeEnums[BadgeEnums[\"None\"] = 0] = \"None\";\r\n    // Kanto\r\n    BadgeEnums[BadgeEnums[\"Boulder\"] = 1] = \"Boulder\";\r\n    BadgeEnums[BadgeEnums[\"Cascade\"] = 2] = \"Cascade\";\r\n    BadgeEnums[BadgeEnums[\"Thunder\"] = 3] = \"Thunder\";\r\n    BadgeEnums[BadgeEnums[\"Rainbow\"] = 4] = \"Rainbow\";\r\n    BadgeEnums[BadgeEnums[\"Soul\"] = 5] = \"Soul\";\r\n    BadgeEnums[BadgeEnums[\"Marsh\"] = 6] = \"Marsh\";\r\n    BadgeEnums[BadgeEnums[\"Volcano\"] = 7] = \"Volcano\";\r\n    BadgeEnums[BadgeEnums[\"Earth\"] = 8] = \"Earth\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Lorelei\"] = 9] = \"Elite_Lorelei\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Bruno\"] = 10] = \"Elite_Bruno\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Agatha\"] = 11] = \"Elite_Agatha\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Lance\"] = 12] = \"Elite_Lance\";\r\n    BadgeEnums[BadgeEnums[\"Elite_KantoChampion\"] = 13] = \"Elite_KantoChampion\";\r\n    // Johto\r\n    BadgeEnums[BadgeEnums[\"Zephyr\"] = 14] = \"Zephyr\";\r\n    BadgeEnums[BadgeEnums[\"Hive\"] = 15] = \"Hive\";\r\n    BadgeEnums[BadgeEnums[\"Plain\"] = 16] = \"Plain\";\r\n    BadgeEnums[BadgeEnums[\"Fog\"] = 17] = \"Fog\";\r\n    BadgeEnums[BadgeEnums[\"Storm\"] = 18] = \"Storm\";\r\n    BadgeEnums[BadgeEnums[\"Mineral\"] = 19] = \"Mineral\";\r\n    BadgeEnums[BadgeEnums[\"Glacier\"] = 20] = \"Glacier\";\r\n    BadgeEnums[BadgeEnums[\"Rising\"] = 21] = \"Rising\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Will\"] = 22] = \"Elite_Will\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Koga\"] = 23] = \"Elite_Koga\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Bruno2\"] = 24] = \"Elite_Bruno2\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Karen\"] = 25] = \"Elite_Karen\";\r\n    BadgeEnums[BadgeEnums[\"Elite_JohtoChampion\"] = 26] = \"Elite_JohtoChampion\";\r\n    // Hoenn\r\n    BadgeEnums[BadgeEnums[\"Stone\"] = 27] = \"Stone\";\r\n    BadgeEnums[BadgeEnums[\"Knuckle\"] = 28] = \"Knuckle\";\r\n    BadgeEnums[BadgeEnums[\"Dynamo\"] = 29] = \"Dynamo\";\r\n    BadgeEnums[BadgeEnums[\"Heat\"] = 30] = \"Heat\";\r\n    BadgeEnums[BadgeEnums[\"Balance\"] = 31] = \"Balance\";\r\n    BadgeEnums[BadgeEnums[\"Feather\"] = 32] = \"Feather\";\r\n    BadgeEnums[BadgeEnums[\"Mind\"] = 33] = \"Mind\";\r\n    BadgeEnums[BadgeEnums[\"Rain\"] = 34] = \"Rain\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Sidney\"] = 35] = \"Elite_Sidney\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Phoebe\"] = 36] = \"Elite_Phoebe\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Glacia\"] = 37] = \"Elite_Glacia\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Drake\"] = 38] = \"Elite_Drake\";\r\n    BadgeEnums[BadgeEnums[\"Elite_HoennChampion\"] = 39] = \"Elite_HoennChampion\";\r\n    // Sinnoh\r\n    BadgeEnums[BadgeEnums[\"Coal\"] = 40] = \"Coal\";\r\n    BadgeEnums[BadgeEnums[\"Forest\"] = 41] = \"Forest\";\r\n    BadgeEnums[BadgeEnums[\"Relic\"] = 42] = \"Relic\";\r\n    BadgeEnums[BadgeEnums[\"Cobble\"] = 43] = \"Cobble\";\r\n    BadgeEnums[BadgeEnums[\"Fen\"] = 44] = \"Fen\";\r\n    BadgeEnums[BadgeEnums[\"Mine\"] = 45] = \"Mine\";\r\n    BadgeEnums[BadgeEnums[\"Icicle\"] = 46] = \"Icicle\";\r\n    BadgeEnums[BadgeEnums[\"Beacon\"] = 47] = \"Beacon\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Aaron\"] = 48] = \"Elite_Aaron\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Bertha\"] = 49] = \"Elite_Bertha\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Flint\"] = 50] = \"Elite_Flint\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Lucian\"] = 51] = \"Elite_Lucian\";\r\n    BadgeEnums[BadgeEnums[\"Elite_SinnohChampion\"] = 52] = \"Elite_SinnohChampion\";\r\n    // Unova\r\n    BadgeEnums[BadgeEnums[\"Basic\"] = 53] = \"Basic\";\r\n    BadgeEnums[BadgeEnums[\"Toxic\"] = 54] = \"Toxic\";\r\n    BadgeEnums[BadgeEnums[\"Insect\"] = 55] = \"Insect\";\r\n    BadgeEnums[BadgeEnums[\"Bolt\"] = 56] = \"Bolt\";\r\n    BadgeEnums[BadgeEnums[\"Quake\"] = 57] = \"Quake\";\r\n    BadgeEnums[BadgeEnums[\"Jet\"] = 58] = \"Jet\";\r\n    BadgeEnums[BadgeEnums[\"Legend\"] = 59] = \"Legend\";\r\n    BadgeEnums[BadgeEnums[\"Wave\"] = 60] = \"Wave\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Shauntal\"] = 61] = \"Elite_Shauntal\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Marshal\"] = 62] = \"Elite_Marshal\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Grimsley\"] = 63] = \"Elite_Grimsley\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Caitlin\"] = 64] = \"Elite_Caitlin\";\r\n    BadgeEnums[BadgeEnums[\"Elite_UnovaChampion\"] = 65] = \"Elite_UnovaChampion\";\r\n    // Kalos\r\n    BadgeEnums[BadgeEnums[\"Bug\"] = 66] = \"Bug\";\r\n    BadgeEnums[BadgeEnums[\"Cliff\"] = 67] = \"Cliff\";\r\n    BadgeEnums[BadgeEnums[\"Rumble\"] = 68] = \"Rumble\";\r\n    BadgeEnums[BadgeEnums[\"Plant\"] = 69] = \"Plant\";\r\n    BadgeEnums[BadgeEnums[\"Voltage\"] = 70] = \"Voltage\";\r\n    BadgeEnums[BadgeEnums[\"Fairy\"] = 71] = \"Fairy\";\r\n    BadgeEnums[BadgeEnums[\"Psychic\"] = 72] = \"Psychic\";\r\n    BadgeEnums[BadgeEnums[\"Iceberg\"] = 73] = \"Iceberg\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Malva\"] = 74] = \"Elite_Malva\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Siebold\"] = 75] = \"Elite_Siebold\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Wikstrom\"] = 76] = \"Elite_Wikstrom\";\r\n    BadgeEnums[BadgeEnums[\"Elite_Drasna\"] = 77] = \"Elite_Drasna\";\r\n    BadgeEnums[BadgeEnums[\"Elite_KalosChampion\"] = 78] = \"Elite_KalosChampion\";\r\n})(BadgeEnums || (BadgeEnums = {}));\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (BadgeEnums);\r\n\n\n//# sourceURL=webpack:///./src/modules/enums/Badges.ts?");

/***/ }),

/***/ "./src/modules/enums/PokemonType.ts":
/*!******************************************!*\
  !*** ./src/modules/enums/PokemonType.ts ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar PokemonType;\r\n(function (PokemonType) {\r\n    PokemonType[PokemonType[\"None\"] = -1] = \"None\";\r\n    PokemonType[PokemonType[\"Normal\"] = 0] = \"Normal\";\r\n    PokemonType[PokemonType[\"Fire\"] = 1] = \"Fire\";\r\n    PokemonType[PokemonType[\"Water\"] = 2] = \"Water\";\r\n    PokemonType[PokemonType[\"Electric\"] = 3] = \"Electric\";\r\n    PokemonType[PokemonType[\"Grass\"] = 4] = \"Grass\";\r\n    PokemonType[PokemonType[\"Ice\"] = 5] = \"Ice\";\r\n    PokemonType[PokemonType[\"Fighting\"] = 6] = \"Fighting\";\r\n    PokemonType[PokemonType[\"Poison\"] = 7] = \"Poison\";\r\n    PokemonType[PokemonType[\"Ground\"] = 8] = \"Ground\";\r\n    PokemonType[PokemonType[\"Flying\"] = 9] = \"Flying\";\r\n    PokemonType[PokemonType[\"Psychic\"] = 10] = \"Psychic\";\r\n    PokemonType[PokemonType[\"Bug\"] = 11] = \"Bug\";\r\n    PokemonType[PokemonType[\"Rock\"] = 12] = \"Rock\";\r\n    PokemonType[PokemonType[\"Ghost\"] = 13] = \"Ghost\";\r\n    PokemonType[PokemonType[\"Dragon\"] = 14] = \"Dragon\";\r\n    PokemonType[PokemonType[\"Dark\"] = 15] = \"Dark\";\r\n    PokemonType[PokemonType[\"Steel\"] = 16] = \"Steel\";\r\n    PokemonType[PokemonType[\"Fairy\"] = 17] = \"Fairy\";\r\n})(PokemonType || (PokemonType = {}));\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (PokemonType);\r\n\n\n//# sourceURL=webpack:///./src/modules/enums/PokemonType.ts?");

/***/ }),

/***/ "./src/modules/index.ts":
/*!******************************!*\
  !*** ./src/modules/index.ts ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _temporaryWindowInjection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./temporaryWindowInjection */ \"./src/modules/temporaryWindowInjection.ts\");\n/* harmony import */ var _koExtenders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./koExtenders */ \"./src/modules/koExtenders.ts\");\n/* harmony import */ var _koExtenders__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_koExtenders__WEBPACK_IMPORTED_MODULE_1__);\n\r\n// Ensure that the Knockout Extenders are injected\r\n\r\n\n\n//# sourceURL=webpack:///./src/modules/index.ts?");

/***/ }),

/***/ "./src/modules/koExtenders.ts":
/*!************************************!*\
  !*** ./src/modules/koExtenders.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* eslint-disable no-param-reassign */\r\n/// <reference path=\"./koExtenders.d.ts\" />\r\n// Only numeric values allowed - usage: ko.observable(0).extend({ numeric: 0 });\r\nko.extenders.numeric = (target, precision) => {\r\n    // create a writable computed observable to intercept writes to our observable\r\n    const result = ko.pureComputed({\r\n        read: target,\r\n        write: (newValueRaw) => {\r\n            const newValue = Number(newValueRaw);\r\n            if (Number.isNaN(newValue)) {\r\n                return;\r\n            }\r\n            const current = target();\r\n            const roundingMultiplier = Math.pow(10, precision);\r\n            const valueToWrite = Math.round(newValue * roundingMultiplier) / roundingMultiplier;\r\n            // only write if it changed\r\n            if (valueToWrite !== current) {\r\n                target(valueToWrite);\r\n            }\r\n            else if (newValue !== current) {\r\n                // if the rounded value is the same, but a different value was\r\n                // written, force a notification for the current field\r\n                target.notifySubscribers(valueToWrite);\r\n            }\r\n        },\r\n    }).extend({ notify: 'always' });\r\n    // initialize with current value to make sure it is rounded appropriately\r\n    result(target());\r\n    // return the new computed observable\r\n    return result;\r\n};\r\nko.bindingHandlers.contentEditable = {\r\n    init: (element, valueAccessor) => {\r\n        const value = valueAccessor();\r\n        function onBlur() {\r\n            if (ko.isWriteableObservable(value)) {\r\n                value(this.textContent);\r\n            }\r\n        }\r\n        element.textContent = value();\r\n        element.contentEditable = 'true';\r\n        element.addEventListener('blur', onBlur);\r\n    },\r\n};\r\n\n\n//# sourceURL=webpack:///./src/modules/koExtenders.ts?");

/***/ }),

/***/ "./src/modules/settings/BooleanSetting.ts":
/*!************************************************!*\
  !*** ./src/modules/settings/BooleanSetting.ts ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BooleanSetting; });\n/* harmony import */ var _Setting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Setting */ \"./src/modules/settings/Setting.ts\");\n/* harmony import */ var _SettingOption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SettingOption */ \"./src/modules/settings/SettingOption.ts\");\n\r\n\r\nclass BooleanSetting extends _Setting__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(name, displayName, defaultValue) {\r\n        super(name, displayName, [\r\n            new _SettingOption__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('On', true),\r\n            new _SettingOption__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Off', false),\r\n        ], defaultValue);\r\n    }\r\n    toggle() {\r\n        this.set(!this.value);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/modules/settings/BooleanSetting.ts?");

/***/ }),

/***/ "./src/modules/settings/RangeSetting.ts":
/*!**********************************************!*\
  !*** ./src/modules/settings/RangeSetting.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RangeSetting; });\n/* harmony import */ var _Setting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Setting */ \"./src/modules/settings/Setting.ts\");\n/* harmony import */ var _SettingOption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SettingOption */ \"./src/modules/settings/SettingOption.ts\");\n\r\n\r\nclass RangeSetting extends _Setting__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    constructor(name, displayName, minValue, maxValue, step, defaultValue) {\r\n        super(name, displayName, [\r\n            new _SettingOption__WEBPACK_IMPORTED_MODULE_1__[\"default\"](minValue.toString(), minValue),\r\n            new _SettingOption__WEBPACK_IMPORTED_MODULE_1__[\"default\"](maxValue.toString(), maxValue),\r\n        ], defaultValue);\r\n        this.minValue = minValue;\r\n        this.maxValue = maxValue;\r\n        this.step = step;\r\n    }\r\n    validValue(value) {\r\n        if (!this.isUnlocked(value)) {\r\n            return false;\r\n        }\r\n        return value >= this.minValue && value <= this.maxValue;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/modules/settings/RangeSetting.ts?");

/***/ }),

/***/ "./src/modules/settings/Setting.ts":
/*!*****************************************!*\
  !*** ./src/modules/settings/Setting.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Setting; });\nclass Setting {\r\n    // Leave options array empty to allow all options.\r\n    constructor(name, displayName, options, defaultValue) {\r\n        this.name = name;\r\n        this.displayName = displayName;\r\n        this.options = options;\r\n        this.defaultValue = defaultValue;\r\n        this.observableValue = ko.observable(this.defaultValue);\r\n        this.set(defaultValue);\r\n    }\r\n    set(value) {\r\n        if (this.validValue(value)) {\r\n            this.value = value;\r\n            this.observableValue(value);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line no-console\r\n            console.warn(`${value} is not a valid value for setting ${this.name}`);\r\n        }\r\n    }\r\n    validValue(value) {\r\n        if (!this.isUnlocked(value)) {\r\n            return false;\r\n        }\r\n        if (this.options.length === 0) {\r\n            return true;\r\n        }\r\n        for (let i = 0; i < this.options.length; i += 1) {\r\n            if (this.options[i].value === value) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    isSelected(value) {\r\n        return ko.pureComputed(() => (this.observableValue() === value), this);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, class-methods-use-this\r\n    isUnlocked(value) {\r\n        return true;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/modules/settings/Setting.ts?");

/***/ }),

/***/ "./src/modules/settings/SettingOption.ts":
/*!***********************************************!*\
  !*** ./src/modules/settings/SettingOption.ts ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SettingOption; });\nclass SettingOption {\r\n    constructor(text, value) {\r\n        this.text = text;\r\n        this.value = value;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/modules/settings/SettingOption.ts?");

/***/ }),

/***/ "./src/modules/temporaryWindowInjection.ts":
/*!*************************************************!*\
  !*** ./src/modules/temporaryWindowInjection.ts ***!
  \*************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DataStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataStore */ \"./src/modules/DataStore/index.ts\");\n/* harmony import */ var _GameConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GameConstants */ \"./src/modules/GameConstants.ts\");\n/* harmony import */ var _GameHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GameHelper */ \"./src/modules/GameHelper.ts\");\n/* harmony import */ var _enums_Badges__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enums/Badges */ \"./src/modules/enums/Badges.ts\");\n/* harmony import */ var _enums_PokemonType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enums/PokemonType */ \"./src/modules/enums/PokemonType.ts\");\n/* harmony import */ var _settings_BooleanSetting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settings/BooleanSetting */ \"./src/modules/settings/BooleanSetting.ts\");\n/* harmony import */ var _settings_RangeSetting__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./settings/RangeSetting */ \"./src/modules/settings/RangeSetting.ts\");\n/* harmony import */ var _settings_Setting__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./settings/Setting */ \"./src/modules/settings/Setting.ts\");\n/* harmony import */ var _settings_SettingOption__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./settings/SettingOption */ \"./src/modules/settings/SettingOption.ts\");\n// TODO: Remove temporary code after all code in ../scripts has been ported.\r\n// This is only here so that the code in ../scripts can use the new functionality\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nObject.assign(window, {\r\n    GameConstants: _GameConstants__WEBPACK_IMPORTED_MODULE_1__,\r\n    GameHelper: _GameHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\r\n    DataStore: _DataStore__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\r\n    BadgeCase: _DataStore__WEBPACK_IMPORTED_MODULE_0__[\"default\"].badge,\r\n    Statistics: _DataStore__WEBPACK_IMPORTED_MODULE_0__[\"default\"].statistics,\r\n    BadgeEnums: _enums_Badges__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\r\n    PokemonType: _enums_PokemonType__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\r\n    BooleanSetting: _settings_BooleanSetting__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\r\n    RangeSetting: _settings_RangeSetting__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\r\n    Setting: _settings_Setting__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\r\n    SettingOption: _settings_SettingOption__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\r\n});\r\n\n\n//# sourceURL=webpack:///./src/modules/temporaryWindowInjection.ts?");

/***/ })

/******/ });